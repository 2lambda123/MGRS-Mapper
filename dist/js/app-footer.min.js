var id=0,markers=[];iw=new google.maps.InfoWindow;var newMarker,map,overlay,iw,canvasLayer,mouseStartDrag=[0,0],activePointPin=[47,128],resolutionScale=window.devicePixelRatio||1;function lockScale(){document.querySelector("#lockBox").style.display="none",document.querySelector('label[for="lockBox"]').style.display="none",google.maps.event.addListener(map,"zoom_changed",function(){var e=map.getZoom();markerWidth=e/3*10,markerHeight=e/2*10,markers.forEach(function(e){console.log(e),e.setIcon({url:image.toString(),scaledSize:new google.maps.Size(markerHeight,markerWidth)})})})}function DeleteMarker(e){for(var t=0;t<markers.length;t++)if(markers[t].id==e)return markers[t].setMap(null),void markers.splice(t,-1)}(overlay=new google.maps.OverlayView).draw=function(){},overlay.setMap(map),elevator=new google.maps.ElevationService,console.log("MGRS Mapper by James Pistell"),$(window).on("load",function(){function e(){$(".draggable").draggable({revert:!0,stack:".draggable",helper:"clone"}),$("#map").droppable({accept:".draggable",drop:function(e,t){iw&&iw.close(),document.getElementsByClassName("dragAndDropNotification")[0].style.display="none";var o=0,n=$(this),a=t.draggable,i=[e.clientX-$("#map").position().left,e.clientY-$("#map").position().top];i=[i[0]+activePointPin[0]-mouseStartDrag[0],i[1]+activePointPin[1]-mouseStartDrag[1]];var l=overlay.getProjection().fromContainerPixelToLatLng(new google.maps.Point(i[0],i[1])),r=$(".svg-symbol img").attr("src"),c=$(".svg-symbol img").attr("height"),s=$(".svg-symbol img").attr("width");image=new google.maps.MarkerImage(r,null,null,null);var d=new google.maps.Marker({map:map,position:l,draggable:!0,icon:image,id:id++,optimized:!1,zIndex:o,funcid:document.getElementsByClassName("funcid")[0].innerText.split("-").slice(-2).reverse().join(", ")});markers.push(d);var u=d.funcid,m=document.querySelectorAll(".mdc-select__selected-text")[1].innerText,g=document.querySelectorAll(".mdc-select__selected-text")[5].innerText,p=document.querySelectorAll(".mdc-select__selected-text")[6].innerText,v=document.querySelector("#uniqueDesignation").value,y=document.querySelector("#higherFormation").value,f=document.querySelector("#outlineWidth").attributes[6].value,S=document.querySelector("#outlineColor .mdc-select__selected-text").innerText,h=document.querySelector(".search input").value;gtag("event","Marker Dropped",{unit:u,affiliation:m,hq_selected:g,unit_size:p,unique_unit_designation:v,higher_formation:y,symbol_outline_width:f,symbol_outline_color:S,search_string:h}),d.icon.scaledSize=new google.maps.Size(s,c),google.maps.event.addListener(d,"click",function(e){actual=d;var t=actual.getPosition().lat(),o=actual.getPosition().lng(),n="<div class='infowindow'><h6><span style='color: red;'>Lat/Lon: </span>"+t.toFixed(6)+", "+o.toFixed(6)+"</h6></div>",a="<div class='MGRS'><h6><span style='color: red;'>MGRS: </span>"+USNG.LLtoUSNG(t,o,5)+"</h6></div>";iw.setContent(n+a),iw.open(map,this)}),google.maps.event.addListener(d,"click",function(e){var t,o,n;t=e.latLng,o=elevator,n=iw,o.getElevationForLocations({locations:[t]},function(e,o){if(n.setPosition(t),"OK"===o)if(e[0]){var a="<div class='Elevation'><h6><span style='color: red;'>Elevation: </span>"+parseInt(e[0].elevation)+" meters</h6></div>";a+="<h6><span style='color: red;'>Unit: </span>"+d.funcid+"</h6>",a+="<input type = 'button' value = 'Delete' onclick = 'DeleteMarker("+d.id+")'/>",a+="<input type='checkbox' id='lockBox' value='LockScale' onclick='lockScale()'/><label for='lockBox' style='font-size:15px;'> Lock Icon Scale (beta)</label>";var i=document.querySelector(".MGRS");i.innerHTML=i.innerHTML+a}else n.setContent("No results found");else n.setContent("Elevation service failed due to: "+o)})}),google.maps.event.addListener(d,"dragstart",function(){actual=d,actual==d&&iw.close(),o+=1,d.setZIndex(o)}),google.maps.event.addListener(map,"click",function(){iw&&iw.close()}),a.clone().appendTo(n)}})}e();var t=document.querySelector("#toolbar");new MutationObserver(function(t){t.forEach(function(t){"attributes"==t.type&&(e(),"Ground Equipment"===document.querySelector(".battle_dim").innerText?document.querySelector(".sym_mod_2").innerText="Symbol Modifier 2":document.querySelector(".sym_mod_2").innerText="Unit Size")})}).observe(t,{attributes:!0,subtree:!0})});
